structs {
  point3D {float x, y, z;};
  cylinder {point3D base, float radius, height;};
}

main() bool {
  local {cylinder c1, c2;}
  write("Introduza os dois cilindros");
  c1 = read_all();
  c2 = read_all();
  write("O volume de intersecção entre o cilindro c1 e o cilindro c2 é: ", intersectionVolume(c1, c2));
  main = true;
}

intersectionVolume(cylinder c1, cylinder c2) float {
  local {float d, h, vol;}
  d = distance3D(c1.base, c2.base);
  h = min(c1.height, c2.height) - max(0, abs(c1.height - c2.height) - d);
  
  if (h <= 0) {
    vol = 0;
  } else {
    local {float r1, r2, r;}
    r1 = c1.radius;
    r2 = c2.radius;
    r = min(r1, r2);
    vol = pi * r * r * h;
  }
  
  intersectionVolume = vol;
}

distance3D(point3D p, point3D q) float {
  distance3D = square_root(
    pow(q.x - p.x, 2) +
    pow(q.y - p.y, 2) +
    pow(q.z - p.z, 2));
}
